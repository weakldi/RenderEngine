package renderengine.test;

import java.awt.Color;
import java.io.File;

import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileFilter;

import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.AWTGLCanvas;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kristian
 */
public class OBJLoaderFrame extends javax.swing.JFrame {
    public boolean update = false;
    public boolean updateModel = false;
    public boolean updateTexture = false;
    private Color lightC,modelC;
    private String modelFile = "res/models/";
    private String textureFile = "res/textures";
    /**
     * Creates new form NewJFrame
     */
    public OBJLoaderFrame() {
        lightC = new Color(1, 1, 1f);
        modelC = new Color(1f, 1, 1);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	
    	double min = -100.0;
        double value = 1;
        double max = 100.0;
        double stepSize = 0.001;
        SpinnerNumberModel model = new SpinnerNumberModel(value, min, max, stepSize);
        canvasPanel = new javax.swing.JPanel();
        try {
			renderCanvas = new AWTGLCanvas();
		} catch (LWJGLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        jLabel1 = new javax.swing.JLabel();
        scaleX = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        scaleY = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        jLabel2 = new javax.swing.JLabel();
        scaleZ = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        jLabel3 = new javax.swing.JLabel();
        rotX = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        rotY = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        jLabel4 = new javax.swing.JLabel();
        rotZ = new javax.swing.JSpinner(new SpinnerNumberModel(value, min, max, stepSize));
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        loadModel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        modelColor = new javax.swing.JButton();
        lightColor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 1280, 800));
        setTitle("Renderengine Objloader Test: res/models/tardisMain.obj");
        renderCanvas.setBackground(new java.awt.Color(255, 0, 0));
        renderCanvas.setMaximumSize(new java.awt.Dimension(900, 698));
        renderCanvas.setMinimumSize(new java.awt.Dimension(900, 698));

        javax.swing.GroupLayout canvasPanelLayout = new javax.swing.GroupLayout(canvasPanel);
        canvasPanel.setLayout(canvasPanelLayout);
        canvasPanelLayout.setHorizontalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(renderCanvas, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        canvasPanelLayout.setVerticalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(renderCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setText("X-Scale");

        
        scaleX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scaleXStateChanged(evt);
            }
        });
        
        
        scaleY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scaleYStateChanged(evt);
            }
        });

        jLabel2.setText("Y-Scale");

        
        scaleZ.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                scaleZStateChanged(evt);
            }
        });

        jLabel3.setText("Z-Scale");

        
        rotX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rotXStateChanged(evt);
            }
        });
 
        rotY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rotYStateChanged(evt);
            }
        });

        jLabel4.setText("Y-Rotation");

        
        rotZ.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rotZStateChanged(evt);
            }
        });

        jLabel5.setText("Z-Rotation");

        jLabel6.setText("X-Rotation");

        loadModel.setText("load model");
        loadModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadModelActionPerformed(evt);
            }
        });

        jButton1.setText("load Texture");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        modelColor.setText("change Color");
        modelColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelColorActionPerformed(evt);
            }
        });

        lightColor.setText("change light color");
        lightColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scaleX, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scaleY, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scaleZ, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotX, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotY, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotZ, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadModel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modelColor, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lightColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loadModel)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelColor)
                            .addComponent(lightColor))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scaleX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scaleY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scaleZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rotX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rotY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rotZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(canvasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void lightColorActionPerformed(java.awt.event.ActionEvent evt) {                                           
        lightC = JColorChooser.showDialog(this,"Lightcolor" ,lightC);
        update = true;
    }                                          

    private void loadModelActionPerformed(java.awt.event.ActionEvent evt) {                                          
        JFileChooser fileC;
        if(modelFile.equalsIgnoreCase("")){
            fileC = new JFileChooser();
        }else{
            fileC = new JFileChooser(new File(modelFile));
        }
        fileC.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if(f.getName().endsWith(".obj")||f.isDirectory())
                    return true;
                return false;
            }

            @Override
            public String getDescription() {
                return ".obj";
            }
        });
        if(fileC.showOpenDialog(this)==0){
            modelFile = fileC.getSelectedFile().getAbsolutePath();
            setTitle("Renderengine Objloader Test: " + modelFile);
            updateModel = true;
        };
        
    }                                         

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       JFileChooser fileC;
        if(textureFile.equalsIgnoreCase("")){
            fileC = new JFileChooser();
        }else{
            fileC = new JFileChooser(new File(textureFile));
        }
        fileC.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if(f.getName().endsWith(".png")||f.isDirectory())
                    return true;
                return false;
            }

            @Override
            public String getDescription() {
                return ".png";
            }
        });
        if(fileC.showOpenDialog(this)==0){
            textureFile = fileC.getSelectedFile().getAbsolutePath();
            updateTexture = true;
        };
       
    }                                        

    private void modelColorActionPerformed(java.awt.event.ActionEvent evt) {                                           
         modelC = JColorChooser.showDialog(this,"Modelcolor" ,modelC);
        update = true;
    }                                          

    private void scaleXStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        update = true;
    }                                   

    private void scaleYStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        update = true;
    }                                   

    private void scaleZStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        update = true;
    }                                   

    private void rotXStateChanged(javax.swing.event.ChangeEvent evt) {                                  
        update = true;
    }                                 

    private void rotYStateChanged(javax.swing.event.ChangeEvent evt) {                                  
         update = true;
    }                                 

    private void rotZStateChanged(javax.swing.event.ChangeEvent evt) {                                  
         update = true;
    }                                 

    /**
     * @param args the command line arguments
     */
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OBJLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OBJLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OBJLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OBJLoaderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OBJLoaderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel canvasPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton lightColor;
    private javax.swing.JButton loadModel;
    private javax.swing.JButton modelColor;
    private java.awt.Canvas renderCanvas;
    private javax.swing.JSpinner rotX;
    private javax.swing.JSpinner rotY;
    private javax.swing.JSpinner rotZ;
    private javax.swing.JSpinner scaleX;
    private javax.swing.JSpinner scaleY;
    private javax.swing.JSpinner scaleZ;
    // End of variables declaration                   
	public Color getLightC() {
		return lightC;
	}

	public void setLightC(Color lightC) {
		this.lightC = lightC;
	}

	public Color getModelC() {
		return modelC;
	}

	public void setModelC(Color modelC) {
		this.modelC = modelC;
	}

	public String getModelFile() {
		return modelFile;
	}

	public void setModelFile(String modelFile) {
		this.modelFile = modelFile;
	}

	public String getTextureFile() {
		return textureFile;
	}

	public void setTextureFile(String textureFile) {
		this.textureFile = textureFile;
	}

	public java.awt.Canvas getRenderCanvas() {
		return renderCanvas;
	}

	public void setRenderCanvas(java.awt.Canvas renderCanvas) {
		this.renderCanvas = renderCanvas;
	}

	public javax.swing.JSpinner getRotX() {
		return rotX;
	}

	public void setRotX(javax.swing.JSpinner rotX) {
		this.rotX = rotX;
	}

	public javax.swing.JSpinner getRotY() {
		return rotY;
	}

	public void setRotY(javax.swing.JSpinner rotY) {
		this.rotY = rotY;
	}

	public javax.swing.JSpinner getRotZ() {
		return rotZ;
	}

	public void setRotZ(javax.swing.JSpinner rotZ) {
		this.rotZ = rotZ;
	}

	public javax.swing.JSpinner getScaleX() {
		return scaleX;
	}

	public void setScaleX(javax.swing.JSpinner scaleX) {
		this.scaleX = scaleX;
	}

	public javax.swing.JSpinner getScaleY() {
		return scaleY;
	}

	public void setScaleY(javax.swing.JSpinner scaleY) {
		this.scaleY = scaleY;
	}

	public javax.swing.JSpinner getScaleZ() {
		return scaleZ;
	}

	public void setScaleZ(javax.swing.JSpinner scaleZ) {
		this.scaleZ = scaleZ;
	}
}
